{"version":3,"sources":["Components/Quote.js","Components/Header.js","Components/Card.js","Components/PaginatedComponent.js","Components/AiringBody.js","Components/Images.js","Components/AnimeTypeNavbar.js","Components/Home.js","Components/TopAnimeBody.js","Components/TopAnime.js","Components/AnimeImageColumn.js","Components/AnimeImageDetailsColumn.js","Components/AnimeDetails.js","Components/Details.js","Components/SearchHeader.js","Components/SearchBody.js","Components/Search.js","Components/UpcomingAnimeBody.js","Components/UpcomingAnime.js","Components/App.js","index.js"],"names":["Quote","props","state","className","this","quoteObj","quote","character","Component","Header","fetch","then","response","json","setState","catch","err","console","log","Card","Infos","aniInfos","map","v","r18","to","pathname","data","history","loading","src","image_url","alt","title","length","slice","toString","Fragment","PaginatedComponent","handlePageClick","bind","e","num","selected","paginate","pageCount","Math","floor","cardPerPage","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","Body","currentPage","res","status","anime","animes","cardPart","lastCardIndex","firstCardIndex","cardInPresentPage","headerImages","forEach","push","random","AnimeTypeNavbar","style","zIndex","exact","Home","AiringBody","TopAnimeBody","i","top","concat","TopAnime","AnimeImageColumn","AnimeImageDetailsColumn","aniData","genre","studios","genres","name","rank","popularity","months","from","aired","fromMonth","Date","getMonth","fromDate","getDate","toMonth","toDate","fromDateString","toDateString","episodes","score","type","source","rating","AnimeDetails","animeDetails","mal_id","Details","mainData","mainHistory","location","useLocation","window","sessionStorage","setItem","JSON","stringify","parse","getItem","SearchHeader","aniResults","handleChange","inputChange","target","value","results","fillSearch","placeholder","onChange","onClick","SearchBody","changeState","UpcomingAnimeBody","UpcomingAnime","App","path","component","Search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.972dac50.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nclass Quote extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"quote\">\n        <h4 className=\"quoteText\">\n          <i className=\"fa fa-quote-left leftQuote\"></i>{\" \"}\n          {this.props.quoteObj.quote}\n        </h4>\n        <em className=\"quoteAuthor\">- {this.props.quoteObj.character}</em>\n      </div>\n    );\n  }\n}\n\nexport default Quote;\n","import React, { Component } from \"react\";\nimport Quote from \"./Quote\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quoteObj: {},\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://animechan.vercel.app/api/random\")\n      .then((response) => response.json())\n      .then((quote) => {\n        this.setState({\n          quoteObj: quote,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n  render() {\n    return (\n      <div className=\"header\">\n        <Quote quoteObj={this.state.quoteObj} />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    let Infos = this.props.aniInfos.map(\n      (v) =>\n        !v.r18 && (\n          <Link\n            to={{\n              pathname: \"/details\",\n              state: {\n                data: v,\n                history: `${this.props.history}`,\n              },\n            }}\n          >\n            <div key={v.toString()} className=\"card\">\n              {this.props.loading && <div>Loading...</div>}\n              <img\n                key={v.image_url}\n                className=\"card-image\"\n                src={v.image_url}\n                alt={v.title}\n              />\n              <div key={v.title} className=\"card-div\">\n                {v.title.length > 30 ? v.title.slice(0, 31) + \"...\" : v.title}\n              </div>\n            </div>\n          </Link>\n        )\n    );\n\n    return <React.Fragment>{Infos}</React.Fragment>;\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nclass PaginatedComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePageClick = this.handlePageClick.bind(this);\n  }\n\n  handlePageClick(e) {\n    let num = e.selected;\n    this.props.paginate(num);\n  }\n  render() {\n    let pageCount = 0;\n    if (this.props.aniInfos) {\n      pageCount = Math.floor(\n        this.props.aniInfos.length / this.props.cardPerPage\n      );\n    }\n    return (\n      <div>\n        <ReactPaginate\n          previousLabel={<i className=\"fas fa-arrow-left\"></i>}\n          nextLabel={<i className=\"fas fa-arrow-right\"></i>}\n          breakLabel={\"...\"}\n          breakClassName={\"break-me\"}\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={this.handlePageClick}\n          containerClassName={\"pagination\"}\n          subContainerClassName={\"pages pagination\"}\n          activeClassName={\"active\"}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PaginatedComponent;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport PaginatedComponent from \"./PaginatedComponent\";\nclass Body extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aniInfos: [],\n      cardPerPage: 20,\n      currentPage: 1,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.jikan.moe/v3/season/2021/summer\")\n      .then((res) => {\n        this.setState({\n          loading: true,\n        });\n        return res.status === 200 ? res.json() : null;\n      })\n      .then((data) => data.anime)\n      .then((animes) => {\n        this.setState({\n          aniInfos: animes,\n        });\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          loading: false,\n        });\n        console.log(err);\n      });\n  }\n\n  render() {\n    let lastCardIndex = this.state.currentPage * this.state.cardPerPage;\n    let firstCardIndex = lastCardIndex - this.state.cardPerPage;\n    let cardInPresentPage = this.state.aniInfos.slice(\n      firstCardIndex,\n      lastCardIndex\n    );\n\n    let cardPart;\n\n    if (this.state.loading) {\n      cardPart = (\n        <div className=\"upperLoadingDiv\">\n          <div className=\"loader\"></div>\n        </div>\n      );\n    } else {\n      cardPart = (\n        <div className=\"cardBody\">\n          <Card\n            aniInfos={cardInPresentPage}\n            history=\"/\"\n            loading={this.state.loading}\n          />\n        </div>\n      );\n    }\n\n    const handlePagination = (num) => {\n      this.setState({\n        currentPage: num + 1,\n      });\n    };\n\n    return (\n      <>\n        {/* <div className=\"bodyHeadUpper\">\n          <div className=\"bodyHead\">\n            <h2>Airing</h2>\n          </div>\n        </div> */}\n        <div className=\"body\">\n          <PaginatedComponent\n            aniInfos={this.state.aniInfos}\n            cardPerPage={this.state.cardPerPage}\n            paginate={handlePagination}\n          />\n          {cardPart}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Body;\n","let imgLink = [\n  \"wp/wp5501287.png\",\n  \"wp/wp5501288.jpg\",\n  \"wp/wp5501309.jpg\",\n  \"wp/wp5501319.jpg\",\n  \"wp/wp5501344.jpg\",\n  \"wp/wp5243211.jpg\",\n  \"wp/wp5501354.jpg\",\n  \"wp/wp5501403.jpg\",\n  \"wp/wp5501422.jpg\",\n  \"wp/wp3008970.jpg\",\n  \"wp/wp5501506.jpg\",\n  \"wp/wp5501503.jpg\",\n  \"wp/wp5501537.jpg\",\n  \"wp/wp5501557.jpg\",\n  \"wp/wp2713320.png\",\n  \"wp/wp5501570.jpg\",\n  \"wp/wp5501587.jpg\",\n  \"wp/wp5501719.jpg\",\n  \"wp/wp5501740.jpg\",\n  \"wp/wp5501832.jpg\",\n];\n\nlet headerImages = [];\n\nimgLink.forEach((v) => {\n  headerImages.push(`https://wallpapercave.com/${v}`);\n});\nlet random = Math.floor(Math.random() * headerImages.length);\n\nexport { headerImages, random };\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass AnimeTypeNavbar extends Component {\n  render() {\n    return (\n      <nav style={{ zIndex: 4 }}>\n        <ul className=\"ulList\">\n          <li className=\"liList\">\n            <NavLink\n              exact\n              activeClassName=\"aListWithShadow\"\n              className=\"aList\"\n              to=\"/\"\n            >\n              Airing\n            </NavLink>\n          </li>\n          <li className=\"liList\">\n            <NavLink\n              exact\n              activeClassName=\"aListWithShadow\"\n              className=\"aList\"\n              to=\"/upcoming anime\"\n            >\n              Upcoming\n            </NavLink>\n          </li>\n          <li className=\"liList\">\n            <NavLink\n              activeClassName=\"aListWithShadow\"\n              className=\"aList\"\n              to=\"/top anime\"\n            >\n              Top\n            </NavLink>\n          </li>\n          <li className=\"liList\">\n            <NavLink\n              activeClassName=\"aListWithShadow\"\n              className=\"aList\"\n              to=\"/search\"\n            >\n              Search\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default AnimeTypeNavbar;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport AiringBody from \"./AiringBody\";\nimport { headerImages, random } from \"./Images\";\nimport AnimeTypeNavbar from \"./AnimeTypeNavbar\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AnimeTypeNavbar />\n        <Header />\n        <AiringBody />\n        <img\n          className=\"headImage\"\n          src={headerImages[random]}\n          alt=\"Background pic\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport PaginatedComponent from \"./PaginatedComponent\";\nclass TopAnimeBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aniInfos: [],\n      cardPerPage: 50,\n      currentPage: 1,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      aniInfos: [],\n    });\n    for (let i = 1; i < 11; i++) {\n      fetch(`https://api.jikan.moe/v3/top/anime/${i}`)\n        .then((res) => {\n          this.setState({\n            loading: true,\n          });\n          return res.json();\n        })\n        .then((data) => data.top)\n        .then((top) => {\n          this.setState((state) => ({\n            aniInfos: state.aniInfos.concat(top),\n          }));\n\n          this.setState({\n            loading: false,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            loading: false,\n          });\n          console.log(err);\n        });\n    }\n  }\n\n  render() {\n    let lastCardIndex = this.state.currentPage * this.state.cardPerPage;\n    let firstCardIndex = lastCardIndex - this.state.cardPerPage;\n    let cardInPresentPage = [];\n    let cardPart;\n\n    if (this.state.aniInfos) {\n      cardInPresentPage = this.state.aniInfos.slice(\n        firstCardIndex,\n        lastCardIndex\n      );\n\n      if (this.state.loading) {\n        cardPart = (\n          <div className=\"upperLoadingDiv\">\n            <div className=\"loader\"></div>\n          </div>\n        );\n      } else {\n        cardPart = (\n          <div className=\"cardBody\">\n            <Card\n              aniInfos={cardInPresentPage}\n              history=\"/top anime\"\n              loading={this.state.loading}\n            />\n          </div>\n        );\n      }\n    }\n\n    const handlePagination = (num) => {\n      this.setState({\n        currentPage: num + 1,\n      });\n    };\n\n    return (\n      <>\n        {/* <div className=\"bodyHeadUpper\">\n          <div className=\"bodyHead\">\n            <h2>Top Animes</h2>\n          </div>\n        </div> */}\n        <div className=\"body\">\n          <PaginatedComponent\n            aniInfos={this.state.aniInfos}\n            cardPerPage={this.state.cardPerPage}\n            paginate={handlePagination}\n          />\n          {cardPart}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TopAnimeBody;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport TopAnimeBody from \"./TopAnimeBody\";\nimport { headerImages, random } from \"./Images\";\nimport AnimeTypeNavbar from \"./AnimeTypeNavbar\";\n\nclass TopAnime extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <AnimeTypeNavbar />\n        <Header />\n        <img\n          className=\"headImage\"\n          src={headerImages[random]}\n          alt=\"Background pic\"\n        />\n        <TopAnimeBody />\n      </div>\n    );\n  }\n}\n\nexport default TopAnime;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass AnimeImageColumn extends Component {\n  render() {\n    return (\n      <div className=\"animeImageColumn\">\n        <img\n          className=\"card-temp-image\"\n          src={this.props.data.image_url}\n          alt={this.props.data.title}\n        />\n        <Link\n          className=\"backDiv\"\n          exact\n          to={{\n            pathname: this.props.history,\n          }}\n        >\n          Back\n        </Link>\n        {/* <div className=\"mainImage\">\n          <div className=\"card-temp\"> */}\n\n        {/* </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default AnimeImageColumn;\n","import React, { Component } from \"react\";\n\nclass AnimeImageDetailsColumn extends Component {\n  render() {\n    let aniData;\n    if (this.props.data) {\n      let genre = \"\";\n      let studios = \"\";\n      if (this.props.data.genres) {\n        this.props.data.genres.forEach((v) => {\n          genre += v.name + \", \";\n        });\n      }\n      genre = genre.slice(0, genre.length - 2);\n\n      if (this.props.data.studios) {\n        this.props.data.studios.forEach((v) => {\n          studios += v.name + \", \";\n        });\n      }\n      studios = studios.slice(0, studios.length - 2);\n\n      let rank = this.props.data.rank\n        ? \"#\" + this.props.data.rank\n        : \"Not Fixed\";\n      let popularity = this.props.data.popularity\n        ? \"#\" + this.props.data.popularity\n        : \"Not Fixed\";\n\n      let months = [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"Jun\",\n        \"Jul\",\n        \"Aug\",\n        \"Sep\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ];\n\n      let from = this.props.data.aired?.from;\n      let to = this.props.data.aired?.to;\n\n      let fromMonth = months[new Date(from).getMonth()];\n      let fromDate = new Date(from).getDate();\n      let toMonth = months[new Date(to).getMonth()];\n      let toDate = new Date(to).getDate();\n\n      let fromDateString = from ? `${fromMonth} ${fromDate} ` : \"?\";\n      let toDateString = to ? `${toMonth} ${toDate}` : \"?\";\n\n      aniData = (\n        <div className=\"animeImageDetailsColumn\">\n          <h4 className=\"style1\">Title</h4>\n          <h4 className=\"style2\">{this.props.data.title}</h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Episodes</h4>\n          <h4 className=\"h4Style\">\n            {this.props.data.episodes ? this.props.data.episodes : \"Not Fixed\"}\n          </h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Score</h4>\n          <h4 className=\"h4Style\">\n            {this.props.data.score ? this.props.data.score : \"Not Fixed\"}\n          </h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Ranked</h4>\n          <h4 className=\"h4Style\">{rank}</h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Popularity</h4>\n          <h4 className=\"h4Style\">{popularity}</h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Status</h4>\n          <h4 className=\"h4Style\">{this.props.data.status}</h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Aired</h4>\n          <h4 className=\"h4Style\">\n            from {fromDateString} to {toDateString}\n          </h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Type</h4>\n          <h4 className=\"h4Style\">{this.props.data.type}</h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Source</h4>\n          <h4 className=\"h4Style\">{this.props.data.source}</h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Rating</h4>\n          <h4 className=\"h4Style\">{this.props.data.rating}</h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Genre</h4>\n          <h4 className=\"h4Style\">{genre}</h4>\n          {/*  */}\n          <h4 className=\"h4Style\">Studios</h4>\n          <h4 className=\"h4Style\">{studios ? studios : \"Not Fixed\"}</h4>\n          {/*  */}\n        </div>\n      );\n    }\n\n    return <>{aniData}</>;\n  }\n}\n\nexport default AnimeImageDetailsColumn;\n","import React, { Component } from \"react\";\nimport AnimeImageColumn from \"./AnimeImageColumn\";\nimport AnimeImageDetailsColumn from \"./AnimeImageDetailsColumn\";\nclass AnimeDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      animeDetails: {},\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://api.jikan.moe/v3/anime/${this.props.data.mal_id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          animeDetails: data,\n        });\n      });\n  }\n\n  render() {\n    let data = this.state.animeDetails;\n    let history = this.props.history;\n    return (\n      <div className=\"animeDetails\">\n        <AnimeImageColumn data={data} history={history} />\n        <AnimeImageDetailsColumn data={data} />\n      </div>\n    );\n  }\n}\n\nexport default AnimeDetails;\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport AnimeDetails from \"./AnimeDetails\";\n\nconst Details = () => {\n  let location = useLocation();\n  let data;\n  let history;\n  let mainData;\n  let mainHistory;\n  if (location.state) {\n    data = location.state.data;\n    history = location.state.history;\n    window.sessionStorage.setItem(\"data\", JSON.stringify(data));\n    window.sessionStorage.setItem(\"history\", JSON.stringify(history));\n    mainData = data;\n    mainHistory = history;\n  } else {\n    mainData = JSON.parse(window.sessionStorage.getItem(\"data\"));\n    mainHistory = JSON.parse(window.sessionStorage.getItem(\"history\"));\n  }\n\n  return (\n    <div className=\"details\">\n      <AnimeDetails data={mainData} history={mainHistory} />\n    </div>\n  );\n};\n\nexport default Details;\n","import React, { Component } from \"react\";\n\nclass SearchHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quoteObj: {},\n      title: \"\",\n      aniResults: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.inputChange = this.inputChange.bind(this);\n  }\n\n  inputChange(e) {\n    this.setState({\n      title: e.target.value,\n    });\n\n    fetch(`https://api.jikan.moe/v3/search/anime?q=${e.target.value}&page=1`)\n      .then((response) => response.json())\n      .then((data) => data.results)\n      .then((results) => {\n        this.setState({\n          aniResults: results,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  handleChange() {\n    this.props.fillSearch(this.state.aniResults);\n  }\n  componentDidMount() {}\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"search\">\n          <input\n            className=\"inputStyle\"\n            type=\"text\"\n            placeholder=\"Search here...\"\n            value={this.state.title}\n            onChange={this.inputChange}\n          />\n          <button className=\"btnStyle\" onClick={this.handleChange}>\n            <i className=\"fa fa-search\"></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchHeader;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport PaginatedComponent from \"./PaginatedComponent\";\nclass SearchBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardPerPage: 20,\n      currentPage: 1,\n      loading: false,\n    };\n  }\n\n  render() {\n    let lastCardIndex = this.state.currentPage * this.state.cardPerPage;\n    let firstCardIndex = lastCardIndex - this.state.cardPerPage;\n    let cardInPresentPage = [];\n    if (this.props.data) {\n      cardInPresentPage = this.props.data.slice(firstCardIndex, lastCardIndex);\n    }\n\n    const handlePagination = (num) => {\n      this.setState({\n        currentPage: num + 1,\n      });\n    };\n\n    let cardPart;\n\n    if (this.state.loading) {\n      cardPart = (\n        <div className=\"upperLoadingDiv\">\n          <div className=\"loader\"></div>\n        </div>\n      );\n    } else {\n      if (this.props.data) {\n        cardPart = (\n          <div className=\"cardBody\">\n            <Card\n              aniInfos={cardInPresentPage}\n              history=\"/search\"\n              loading={this.state.loading}\n            />\n          </div>\n        );\n      } else {\n        cardPart = (\n          <div className=\"notValid\">There is no valid search results...</div>\n        );\n      }\n    }\n\n    return (\n      <>\n        {/* <div className=\"bodyHeadUpper\">\n          <div className=\"bodyHead\">\n            <h2>Search</h2>\n          </div>\n        </div> */}\n        <div className=\"body\">\n          {this.props.data && (\n            <PaginatedComponent\n              aniInfos={this.props.data}\n              cardPerPage={this.state.cardPerPage}\n              paginate={handlePagination}\n            />\n          )}\n          {cardPart}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SearchBody;\n","import React, { Component } from \"react\";\nimport SearchHeader from \"./SearchHeader\";\nimport SearchBody from \"./SearchBody\";\nimport { headerImages, random } from \"./Images\";\nimport AnimeTypeNavbar from \"./AnimeTypeNavbar\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n    this.changeState = this.changeState.bind(this);\n    this.fillSearch = this.fillSearch.bind(this);\n  }\n\n  changeState(v) {\n    this.setState({\n      data: v,\n    });\n  }\n\n  fillSearch(v) {\n    this.changeState(v);\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AnimeTypeNavbar />\n        <SearchHeader fillSearch={this.fillSearch} />\n        <SearchBody data={this.state.data} />\n        <img\n          className=\"headImage\"\n          src={headerImages[random]}\n          alt=\"Background pic\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport PaginatedComponent from \"./PaginatedComponent\";\nclass UpcomingAnimeBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      aniInfos: [],\n      cardPerPage: 20,\n      currentPage: 1,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.jikan.moe/v3/season/later\")\n      .then((res) => {\n        this.setState({\n          loading: true,\n        });\n        return res.status === 200 ? res.json() : null;\n      })\n      .then((data) => data.anime)\n      .then((animes) => {\n        this.setState({\n          aniInfos: animes,\n        });\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          loading: false,\n        });\n        console.log(err);\n      });\n  }\n\n  render() {\n    let lastCardIndex = this.state.currentPage * this.state.cardPerPage;\n    let firstCardIndex = lastCardIndex - this.state.cardPerPage;\n    let cardInPresentPage = this.state.aniInfos.slice(\n      firstCardIndex,\n      lastCardIndex\n    );\n\n    let cardPart;\n\n    if (this.state.loading) {\n      cardPart = (\n        <div className=\"upperLoadingDiv\">\n          <div className=\"loader\"></div>\n        </div>\n      );\n    } else {\n      cardPart = (\n        <div className=\"cardBody\">\n          <Card\n            aniInfos={cardInPresentPage}\n            history=\"/upcoming anime\"\n            loading={this.state.loading}\n          />\n        </div>\n      );\n    }\n\n    const handlePagination = (num) => {\n      this.setState({\n        currentPage: num + 1,\n      });\n    };\n\n    return (\n      <>\n        {/* <div className=\"bodyHeadUpper\">\n          <div className=\"bodyHead\">\n            <h2>Upcoming</h2>\n          </div>\n        </div> */}\n        <div className=\"body\">\n          <PaginatedComponent\n            aniInfos={this.state.aniInfos}\n            cardPerPage={this.state.cardPerPage}\n            paginate={handlePagination}\n          />\n          {cardPart}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UpcomingAnimeBody;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport UpcomingAnimeBody from \"./UpcomingAnimeBody\";\nimport { headerImages, random } from \"./Images\";\nimport AnimeTypeNavbar from \"./AnimeTypeNavbar\";\n\nclass UpcomingAnime extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <AnimeTypeNavbar />\n        <Header />\n        <img\n          className=\"headImage\"\n          src={headerImages[random]}\n          alt=\"Background pic\"\n        />\n        <UpcomingAnimeBody />\n      </div>\n    );\n  }\n}\n\nexport default UpcomingAnime;\n","import \"./App.css\";\nimport Home from \"./Home\";\nimport TopAnime from \"./TopAnime\";\nimport Details from \"./Details\";\nimport Search from \"./Search\";\nimport UpcomingAnime from \"./UpcomingAnime\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/upcoming anime\" component={UpcomingAnime} />\n        <Route path=\"/top anime\" component={TopAnime} />\n        <Route path=\"/details\" component={Details} />\n        <Route path=\"/search\" component={Search} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}